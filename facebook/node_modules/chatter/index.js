var all_sockets = null;


exports.set_sockets = function (sockets) {
	all_sockets = sockets;
};


exports.connect_chatter = function (config) {

	config.socket.on('room', function (data) {
		var room = data.room;
		config.socket.join(room);
	   	//config.socket.in(room).emit('joined', {message: 'Game on in room ' + data.room});
//		config.socket.in(room).emit('ready', {message: data.message});
	});


	config.socket.on('gameStatus', function (data) {
	    var end = data.end;
	    var room = data.room;
	    var klen = data.klen;
	    if (end){
	    	 all_sockets.in(room).emit('end', {end: data.end, klen: data.klen});
	    }
	});

	config.socket.on('chat', function (data) {
		
		var app_id = '611324685593536';
		var fillinblank = 'a6b3cfffad105a6e1723dcc7e2fe3ba9';
		var notify = app_id + '|' + fillinblank;

		var end = data.end;
		var room = data.room;
		if (end){
		   	all_sockets.in(room).emit('chat', {
		   		game: data.game,
		   		word: data.word,
		   		message: data.message, 
		   		end: data.end, 
		   		url: data.url,
		   		complete: data.complete,
		   		turn: data.turn,
		   		active: data.active,
		   		p1: data.p1,
		   		p2: data.p2,
		   		points: data.points,
		   		notify: notify,
		   		url: data.url,
		   		p1points: data.p1p,
		   		p2points: data.p2p,
		   		pointsFor: data.pointsFor,
		   		klen: data.klen
		   	});
		} else {
		   	all_sockets.in(room).emit('chat', {
		   		word: data.word,
		   		message: data.message + " ", 
		   		game: data.game,
		   		turn: data.turn,
		   		p1: data.p1,
		   		p2: data.p2,
		   		points: data.points,
		   		notify: notify,
		   		url: data.url,
		   		p1url: data.p1url,
		   		p2url: data.p2url,
		   		p1points: data.p1p,
		   		p2points: data.p2p,
		   		pointsFor: data.pointsFor
		   	});
		}
	});

	config.socket.on('newGameRequest', function (data) {
		var room = data.room;
		all_sockets.in(room).emit('newGameRequest', {
			pReqting: data.playerRequesting,
			pReqd: data.playerRequested
		});

	});

	config.socket.on('example', function (data) {
	    var room = data.room;
	    all_sockets.in(room).emit('example', {test: data.test});
	});

	//config.socket.emit('entrance'); //, {message: 'Welcome to the chat room!'});
	//all_sockets.emit('entrance');//, {message: config.username + ' is online.'});
	//all_sockets.emit('users', {name: config.username + ' '});
	//all_sockets.emit('current', {currentUser: socket});

};

exports.failure = function (socket) {
	socket.emit('error', {message: 'Please log in to the chatroom'});
};