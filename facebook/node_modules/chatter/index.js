var all_sockets = null;


exports.set_sockets = function (sockets) {
	all_sockets = sockets;
};


exports.connect_chatter = function (config) {

	config.socket.on('room', function (data) {
		var room = data.room;
		config.socket.join(room);
	   	//config.socket.in(room).emit('joined', {message: 'Game on in room ' + data.room});
//		config.socket.in(room).emit('ready', {message: data.message});
	});

	config.socket.on('updateTurn', function (data){
		var room = data.room;
		all_sockets.in(room).emit('update', {room: data.room});
	});


	config.socket.on('gameStatus', function (data) {
	    var end = data.end;
	    var room = data.room;
	    var klen = data.klen;
	    if (end){
	    	 all_sockets.in(room).emit('end', {end: data.end, klen: data.klen});
	    }
	});

	config.socket.on('chat', function (data) {
		
		var app_id = '611324685593536',
			fillinblank = 'a6b3cfffad105a6e1723dcc7e2fe3ba9',
			notify = app_id + '|' + fillinblank,
			end = data.end,
			room = data.room;

	   	all_sockets.in(room).emit('chat', {
	   		notify: notify,
	   		word: data.word,
	   		room: data.room,
	   		level: data.level,
	   		playerId: data.playerId,
	   		place: data.place,
	   		round: data.round,
	   		sWord: data.sWord,
	   		points: data.points,
	   		pointsFor: data.pointsFor
	   	});
		
	});

	config.socket.on('newGameRequest', function (data) {
		var room = data.room;
		all_sockets.in(room).emit('newGameRequest', {
			pReqting: data.playerRequesting,
			pReqd: data.playerRequested
		});

	});

	config.socket.on('example', function (data) {
	    var room = data.room;
	    all_sockets.in(room).emit('example', {test: data.test});
	});

};

exports.failure = function (socket) {
	socket.emit('error', {message: 'Please log in to the chatroom'});
};